h1. Elexis::Wiki::Interface

A Ruby Gem to allow pulling and pushing between Elexis source code repositories and the mediawiki installation

Use it at your own risk, as it is just a small utility gem to help for some release engineering for the Elexis-RCP. See http://elexis.info.

But I have an open ear for suggestions for improvements, especially if they come with a patch including specs.

License: GPLv3 or later

Copyright: 2014 (c) by Niklaus Giger <niklaus.giger@member.fsf.org>

h2. Installation

Ensure that you use Ruby 1.9.2 or higher (mediawiki-gateway does not support Ruby 1.8.7).

Add this line to your application's Gemfile:

bc. $ gem 'elexis-wiki-interface'

And then execute:

bc. $ bundle

Or install it yourself as:

bc. $ gem install elexis-wiki-interface

h2. Usage

h3. using some built-in helpers (mainly for the jenkins-CI)

Each of the helper script below should work if you have a ruby installation >= 1.9.2 and executed @gem install bundler && bundle install@ in directory where

bc. wiki_pull
  wiki_pull_daily
  wiki_push

h3. in a ruby script

bc. require 'elexis/wiki/interface/workspace'
require 'pp'
workspace =  Elexis::Wiki::Interface::Workspace.new('.')
workspace.pull # get actual mediawiki content and place it under doc inside the plugin
workspace.info.show
pp workspace.views_missing_documentation            # returns an array of plugin-ids
pp workspace.perspectives_missing_documentation     # returns an array of plugin-ids
pp workspace.plugins_missing_documentation          # returns an array of plugis
workspace.push # push doc/*.mediwiki files to the wiki

Or you can inspire you from the spec/*_spec.rb files to see tested examples.

h3. Username/password to access your wiki

The username and password is fetched from a config.yml, which may be either
* /etc/elexis-wiki-interface/config.yml
* <current workdir>/config.yml

Here is an example:

bc. ---
  wiki: http://wiki.elexis.info/api.php
  password: topsecrect
  user: elexis

This user must have the privilege to access the wiki via the API interface.

h3. Conventions

* You must create a directory config with a file hosts.yml containing the mediawiki-gateway configuration (host, username, password)

* The push/pull methods use the convention
** in page names all '.' are removed
** a plugin plugin.name has a page plugin.name
** a view view.name with a localized name localized_name has a page <plugin.name>Views<localized_name>
** a perspective perspective.name with a localized name localized_name has a page  P_<localized_name>
** png files should start with their plugin/feature-name followed by '_' by a unique name
** png files resides inside the 'doc' sub-directory of each plugin/feature

h3. Limitations/TODO

* Upload all perspectives/view images from a jubula run
** View-images were in doc_de/images/views/Artikelauswahl.png (localized_name) -> http://wiki.elexis.info/Datei:Ch.elexis:Artikelauswahl.png
** https://srv.elexis.info/jenkins/view/3.0/job/Elexis-3.0-Jubula/118/artifact/test-results/screenshots/Other/https://srv.elexis.info/jenkins/view/3.0/job/Elexis-3.0-Jubula/118/artifact/test-results/screenshots/Other/Fixmedikation.png
** Bug ch.elexis -> ch.elexis.core splitted. now you find it here
*** ch.elexis.core.application/plugin_de.properties:elexis.articleSelectorView=Artikelauswahl
*** ch.elexis.core.ui.laboratory/plugin_de.properties:elexis.articleSelectorView   = Artikelauswahl
*** ch.elexis.core.ui/plugin_de.properties:elexis.articleSelectorView = Artikelauswahl
*** ch.elexis.core.application/plugin.xml:            name="%elexis.articleSelectorView">
** Missing line [[Datei:Ch.elexis:Artikelauswahl.png]] in http://wiki.elexis.info/ChElexisViewsArtikelArtikelselektor
* Perspektives: were not uploaded to doc_de
* No images are pulled/pushed at the moment.
* Check whether a link to the view exists on the wiki.elexis.info/Hauptseite
* No support for features at the moment
* No multilingual support at the moment


h2. Contributing

# Fork it ( http://github.com/ngiger/elexis-wiki-interface/fork )
# Create your feature branch (`git checkout -b my-new-feature`)
# Commit your changes (`git commit -am 'Add some feature'`)
# Push to the branch (`git push origin my-new-feature`)
# Create new Pull Request
